{"version":3,"sources":["app.js","borrow-ctrl.js","borrowed-ctrl.js","lend-ctrl.js","main-ctrl.js","modal-edit-ctrl.js","modal-lend-ctrl.js","modal-new-ctrl.js","nav-ctrl.js","animations.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChEA","file":"concat.js","sourcesContent":["var BorrowApp = angular.module('BorrowApp', ['ngResource', 'ngAnimate', 'ui.router', 'ui.bootstrap']);\n\n// UI.ROUTER //\nBorrowApp.config(['$stateProvider', '$urlRouterProvider', \n  function($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise('/');\n\n    $stateProvider\n    .state('main', {\n      url: '/',\n      templateUrl: 'app/views/main.html',\n      controller: 'MainCtrl'\n    })\n    .state('stuff', {\n      url: '/',\n      templateUrl: 'app/views/nav.html',\n      controller: 'NavCtrl'\n    })\n    .state('stuff.borrow', {\n      url: 'stuff/borrow',\n      templateUrl: 'app/views/borrow.html',\n      controller: 'BorrowCtrl'\n    })\n    .state('stuff.lend', {\n      url: 'stuff/lend',\n      templateUrl: 'app/views/lend.html',\n      controller: 'LendCtrl'\n    })\n    .state('stuff.borrowed', {\n      url: 'stuff/borrowed',\n      templateUrl: 'app/views/borrowed.html',\n      controller: 'BorrowedCtrl'\n    })\n\n  }]); // END config\n\n/////////////////////////////////\n//     Factories & Services   //\n///////////////////////////////\n\n// FACTORIES\n\n// Gets list of all users and sends to MAIN CTRL\nBorrowApp.factory('Users', ['$resource', function($resource) {\n  return $resource('/api/users');\n}]); // END Users factory\n\n// // Refactored - now used $http to call exress instead\n// BorrowApp.factory('Items', ['$resource', function($resource) {\n//   return $resource('/api/borrow-stuff');\n// }]);\n\n// SERVICES\n\n// Sets and gets Id for user selected on main.html\nBorrowApp.service('selectUser', [function() {\n  this.setId = function(id) {\n    this.id = id;\n  }\n  this.getId = function(){\n    return this.id;\n  }\n}]); // END selectUser service","//// SEARCH CTRL ////\n\nBorrowApp.controller('BorrowCtrl', \n  ['$scope', '$http', 'selectUser',\n  function($scope, $http, selectUser) {\n\n  // GET USER SELECTED\n  var id = selectUser.getId();\n  // $http call to backend route that queries db\n  $http.get('/api/borrow-stuff/' + id).success(function(data, status) {\n      for (var i = 0; i < data.length; i++) {\n        data[i].show = true;\n      }\n      $scope.items = data; \n    });\n\n  // Switch image and view\n  $scope.toggle = function(item) {\n    if (item.show) {\n      item.show = false;\n    } else {\n      item.show = true;\n    }\n  }\n\n}]); // END SearchCtrl","//// BORROWED CTRL ////\n\nBorrowApp.controller('BorrowedCtrl', \n  ['$scope', '$http', 'selectUser', \n  function($scope, $http, selectUser) {\n\n  // Switch image and view\n  $scope.toggle = function(item) {\n    if (item.show) {\n      item.show = false;\n    } else {\n      item.show = true;\n    }\n  }\n\n  var id = selectUser.getId();\n\n  $http.get('/api/borrowed-stuff/' + id).success(function(data, status) {\n    for (var i = 0; i < data.length; i++) {\n      data[i].show = true;\n    }    \n    $scope.myBorrowedItems = data;\n  });\n\n}]); // END BorrowedCtrl\n","//// LEND CTRL ////\n\nBorrowApp.controller('LendCtrl', \n  ['$scope','$http', '$uibModal', '$log', '$sce', 'selectUser', \n  function($scope, $http, $uibModal, $log, $sce, selectUser) {\n\n  var id = selectUser.getId();\n  $scope.trustAsHtml = $sce.trustAsHtml\n\n  $scope.animationsEnabled = false;\n\n  // Switch image and view\n  $scope.toggle = function(item) {\n    if (item.show) {\n      item.show = false;\n    } else {\n      item.show = true;\n    }\n  }\n\n  // EDIT ITEM Modal\n  $scope.open = function(item) {\n    console.log(\"open edit\")\n    var modalInstance = $uibModal.open({\n      animation: $scope.animationsEnabled,\n      templateUrl: 'app/templates/editItemModal.html',\n      controller: 'ModalEditCtrl',\n      resolve: {\n        item: item\n      }\n    });\n  };\n\n  // GET USER LEND STUFF\n  $http.get('/api/lend-stuff/' + id).success(function(data, status) {\n    // console.log(\"myItems\", data);\n    for (var i = 0; i < data.length; i++) {\n      data[i].show = true;\n    }\n    $scope.myItems = data;\n  });\n\n  // LEND ITEM MODAL\n  $scope.open = function(item) {\n    var modalInstance = $uibModal.open({\n      animation: $scope.animationsEnabled,\n      templateUrl: 'app/templates/editLendModal.html',\n      controller: 'ModalLendCtrl',\n      resolve: {\n        item: item\n      }\n    });\n  };\n\n  // RETURN ITEM\n  $scope.returnItem = function(id) {\n    console.log(\"ID\", id);\n    $http.put('/api/return-stuff/' + id)\n    .then(function(data) {\n      $scope.myItems\n    })\n  }\n\n}]); // END LendCtrl","//// MAIN CTRL ////\n\nBorrowApp.controller('MainCtrl', ['$scope', 'Users', 'selectUser', '$state', function($scope, Users, selectUser, $state) {\n  $scope.borrow = \"BegBorrowNeverSteal\";\n  // fad in and out pills\n  $scope.bool = true;\n  // include User from resource factory in array\n  // query express Users for users\n  Users.query(function success(data) {\n    $scope.allUsers = data;\n  }, function error(error) {\n    console.log(\"Error allUsers\", error);\n  });\n\n  // function for sending user selection to borrow page\n  $scope.select = function(id){\n    // console.log(\"state\", $state);\n    selectUser.setId(id);\n    $state.go('stuff.borrow');\n  };\n  \n}]); // END MainCtrl","//// MODAL EDIT CTRL ////\n\nBorrowApp.controller('ModalEditCtrl', [\n  '$scope', '$http', '$uibModalInstance', '$state', 'Users', 'selectUser',\n  function($scope, $http, $uibModalInstance, $state, Users, selectUser) {\n  \n  var id = selectUser.getId();\n  var itemId = null;\n\n  // $scope.editableItem = {\n  //   user_id: id,\n  //   name: '',\n  //   category: '',\n  //   description: '',\n  //   imageUrl: ''\n  // };\n\n  // EDIT ITEM //\n  $scope.editRequest = function(id) {\n    console.long(\"in edit\");\n    $scope.itemId = id;\n    $http.get('api/get-edit' + id)\n    .then(function(res) {\n      console.log(\"EDIT\", res);\n      $scope.editableItem = {\n        user_id: id,\n        name: res.name,\n        category: res.category,\n        description: res.description,\n        imageUrl: res.imageUrl\n      };\n    });  \n  }\n\n  $scope.editItem = function(editableItem){\n    // Send form with newItem info to backend\n    $http.put('/api/edit-stuff/' + $scope.itemId, $scope.editableItem)\n    .then(function success(res) {\n      $state.go('stuff.lend');\n    }, function error(err){\n      alert(\"Error: Item was not created\");\n      console.log(\"Post Error\", err);\n    });    \n  }\n\n\n  // OPEN & CLOSE BUTTONS //\n  $scope.ok = function(){\n    $uibModalInstance.close();\n  };\n\n  $scope.cancel = function() {\n    $uibModalInstance.dismiss('cancel');\n  };\n\n}]); // END modal new Ctrl","//// MODAL NEW CTRL ////\n\nBorrowApp.controller('ModalLendCtrl', [\n  '$scope', '$http', '$uibModalInstance', '$state', 'Users', 'selectUser', 'item',\n  function($scope, $http, $uibModalInstance, $state, Users, selectUser, item) {\n\n  // Users to lend to\n  Users.query(function success(data) {\n    $scope.usersToLend = data;\n  }, function error(error) {\n    console.log(\"Error usersToLend\", error);\n  });\n\n\n  // LEND ITEM //\n  $scope.lendItemUpdate = {\n    // item.id comes from open() resolve option\n    item_id: item.id,\n    borrowerID: null\n  };\n\n  $scope.lendItem = function() {\n    // update borrow status of item\n    $http.put('/api/lend-stuff/', $scope.lendItemUpdate)\n    .then(function(data) {\n      $state.go('stuff.lend');\n    }, function(err) {\n      console.log(\"Lend Item Error\", err);\n    });\n  };\n\n\n  // OPEN & CLOSE BUTTONS //\n  $scope.ok = function(){\n    $uibModalInstance.close();\n  };\n\n  $scope.cancel = function() {\n    $uibModalInstance.dismiss('cancel');\n  };\n\n}]); // END modal instance Ctrl","//// MODAL NEW CTRL ////\n\nBorrowApp.controller('ModalNewCtrl', [\n  '$scope', '$http', '$uibModalInstance', '$state', 'Users', 'selectUser',\n  function($scope, $http, $uibModalInstance, $state, Users, selectUser) {\n  \n  var id = selectUser.getId();\n\n  // NEW ITEM //\n  $scope.newItem = {\n    user_id: id,\n    name: '',\n    category: '',\n    description: '',\n    imageUrl: ''\n  };\n\n  $scope.createItem = function(newItem){\n    // Send form with newItem info to backend\n    $http.post('/api/new-stuff/', $scope.newItem)\n    .then(function success(res) {\n      $state.go('stuff.lend');\n    }, function error(err){\n      alert(\"Error: Item was not created\");\n      console.log(\"Post Error\", err);\n    });    \n  }\n\n\n  // OPEN & CLOSE BUTTONS //\n  $scope.ok = function(){\n    $uibModalInstance.close();\n  };\n\n  $scope.cancel = function() {\n    $uibModalInstance.dismiss('cancel');\n  };\n\n}]); // END modal new Ctrl","////// BORROW CTRL //////\n\nBorrowApp.controller('NavCtrl', \n  ['$scope', '$http', '$state', '$uibModal', '$log', 'selectUser', \n  function($scope, $http, $state, $uibModal, $log, selectUser) {\n\n  // NAVIGATE\n  $scope.navTitle = \"Stuff to Borrow\";\n\n  $scope.home = function() {\n    $state.go('main');\n  };\n\n  $scope.titleChange = function(state){\n    if (state === 'borrow') {\n      $scope.navTitle = \"Stuff to Borrow\"; \n    } else if (state === 'borrowed') {\n      $scope.navTitle = \"Stuff I Borrowed\"; \n    } else if (state === 'lend') {\n      $scope.navTitle = \"Stuff I Lend\"; \n    };   \n  };\n\n  $scope.prevState = function(){\n      // console.log($state);\n    if ($state.is('stuff.borrow')) {\n      $state.go('stuff.borrowed');\n      var state = 'borrowed';\n    } else if ($state.is('stuff.borrowed')) {\n      $state.go('stuff.lend')\n      var state = 'lend';\n    } else if ($state.is('stuff.lend')) {\n      $state.go('stuff.borrow');\n      var state = 'borrow';\n    };\n    $scope.titleChange(state);\n  };\n  $scope.nextState = function(){\n      // console.log($state, \"HERE\");\n    if ($state.is('stuff.borrow')) {\n      $state.go('stuff.lend');\n      var state = 'lend';\n    } else if ($state.is('stuff.lend')) {\n      $state.go('stuff.borrowed')\n      var state = 'borrowed';\n    } else if ($state.is('stuff.borrowed')) {\n      $state.go('stuff.borrow');\n      var state = 'borrow';\n    };\n    $scope.titleChange(state);\n  };\n\n  // NEW ITEM MODAL\n  $scope.animationsEnabled = false;\n\n  $scope.open = function() {\n    var modalInstance = $uibModal.open({\n      animation: $scope.animationsEnabled,\n      templateUrl: 'app/templates/newItemModal.html',\n      controller: 'ModalNewCtrl',\n      resolve: {}\n    });\n  };\n\n}]); // END BorrowCtrl",""],"sourceRoot":"/source/"}